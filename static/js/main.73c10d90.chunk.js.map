{"version":3,"sources":["Styles/GlobalStyles.js","Apollo/Client.js","Styles/DefaultStyles.js","Constants/Sections.js","GraphQL/GetPosts.js","Components/PostListItem.jsx","Util/SteemUtil.js","Components/Loader.jsx","Pages/MainPage.jsx","Helpers/Steemit.js","Pages/DetailPage.jsx","Routes.js","App.js","index.js"],"names":["createGlobalStyle","_templateObject","reset","apolloClient","ApolloClient","uri","process","styles","theme","layout","Object","defineProperty","width","marginLeft","spacing","unit","marginRight","breakpoints","up","toolbarMain","borderBottom","concat","palette","grey","toolbarTitle","flex","toolbarSecondary","justifyContent","mainFeaturedPost","backgroundColor","color","common","white","marginBottom","mainFeaturedPostContent","padding","paddingRight","mainGrid","marginTop","card","display","cardDetails","cardMedia","markdown","sidebarAboutBox","sidebarSection","footer","background","paper","sections","전체","일상","도서","글쓰기","이벤트","게임","맛집/음식","여행","코딩/개발","예술/디자인","사진","가즈아","스팀코인판","GET_POSTS","gql","GetPosts_templateObject","PostWrapper","styled","li","PostListItem_templateObject","PostLink","a","_templateObject2","PostContent","div","_templateObject3","PostTitle","strong","_templateObject4","PostSummery","_templateObject5","PostThumb","_templateObject6","PostImg","img","_templateObject7","PostAppendWrapper","_templateObject8","Dot","span","_templateObject9","PostAppend","_templateObject10","By","_templateObject11","withRouter","_ref","data","history","payout","match","disabled","curator_payout_value","pending_payout_value","total_payout_value","hasImage","Boolean","image","react_default","createElement","onClick","push","author","permlink","className","title","summary","vote_count","comment_count","timestamp","String","length","day","hour","min","date","Date","now","sYear","getFullYear","sMonth","getMonth","sDate","getDate","sHour","getHours","sMin","getMinutes","sSecond","getSeconds","today","pastSecond","parseInt","str","transferTime","created","reputation","toFixed","result","Math","max","log10","abs","getReputation","author_reputation","src","Loader","Loader_templateObject","Components_Loader","WrapWriterList","MainPage_templateObject","PostList","ul","MainPage_templateObject2","withStyles","props","client","useApolloClient","mediaXSmatches","useMediaQuery","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","posts","setPosts","getPosts","_ref2","asyncToGenerator","regenerator_default","mark","_callee","tags","_ref3","wrap","_context","prev","next","query","variables","limit","skip","order","sent","console","log","stop","_x","apply","this","arguments","useEffect","selectCategory","_ref4","_callee2","_context2","_x2","classes","Fragment","Helmet","CssBaseline_default","Toolbar_default","Typography_default","component","variant","align","noWrap","IconButton_default","Search_default","entries","map","_ref5","_ref6","section","key","Button_default","size","Divider_default","Grid_default","container","item","xs","md","post","Components_PostListItem","post_id","onclick","Client","mobildWidthStyles","Container","DetailPage_templateObject","ArticleWrap","DetailPage_templateObject2","ArticleCover","DetailPage_templateObject3","ArticleTitle","h1","DetailPage_templateObject4","ArticleInfo","DetailPage_templateObject5","ArticleBody","DetailPage_templateObject6","Remarkable","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","highlight","DetailPage","location","params","isExact","path","url","setData","steemit","database","getDiscussions","tag","start_author","start_permlink","then","class","toDateString","dangerouslySetInnerHTML","__html","render","body","AppRouter","react_router","exact","MainPage","App","ApolloContext","GlobalStyles","react_router_dom","Routes","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.73c10d90.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n// import 'typeface-noto-serif';\n\nexport default createGlobalStyle`\n\t@import url('https://fonts.googleapis.com/css?family=Noto+Serif+KR:400,700');\n\t\n\t${reset}\n\n\t// dl, ul, ol, menu, li {\n  //   \tlist-style: none;\n\t// }\n`;","import ApolloClient from 'apollo-boost';\n\nconst apolloClient = new ApolloClient({\n\turi: process.env.REACT_APP_GRAPHQL_URL,\n});\n\nexport default apolloClient;","const styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  toolbarMain: {\n    borderBottom: `1px solid ${theme.palette.grey[300]}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n  },\n  mainFeaturedPost: {\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing.unit * 4,\n  },\n  mainFeaturedPostContent: {\n    padding: `${theme.spacing.unit * 6}px`,\n    [theme.breakpoints.up('md')]: {\n      paddingRight: 0,\n    },\n  },\n  mainGrid: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n  markdown: {\n    padding: `${theme.spacing.unit * 3}px 0`,\n  },\n  sidebarAboutBox: {\n    padding: theme.spacing.unit * 2,\n    backgroundColor: theme.palette.grey[200],\n  },\n  sidebarSection: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing.unit * 8,\n    padding: `${theme.spacing.unit * 6}px 0`,\n  },\n});\n\nexport default styles;","const sections = {\n  '전체': ['kr'],\n  // '신입': ['kr-newbie', 'kr-join'],\n  '일상':['life', 'kr-life', 'kr-daily'],\n  '도서':['book', 'kr-book', 'booksteem'],\n  '글쓰기': ['kr-pen', 'kr-writing', 'pen', 'writing'],\n  // '운동': ['actifit'],\n  '이벤트': ['event', 'kr-event'],\n  '게임':['game', 'kr-game', 'steemmonsters', 'nextcolony'],\n  '맛집/음식':['tasteem', 'tasteem-kr', 'muksteem', 'food', 'kr-food'],\n  // '연재': ['kr-series'],\n  '여행': ['tripsteem', 'travel', 'kr-travel'],\n  // '해외': ['kr-overseas'],\n\t'코딩/개발': ['kr-dev', 'dev'],\n  '예술/디자인': ['art', 'kr-art', 'ntopaz'],\n  '사진': ['photo', 'kr-photo'],\n  // '블록체인': ['coinkorea'],\n  // '투자': ['tooza'],\n  '가즈아': ['kr-gazua'],\n  '스팀코인판': ['sct']\n  // '기술': [],\n  // '문화': [],\n  // '사업': [],\n  // '정치': [],\n  // '과학': [],\n  // '건강': [],\n  // '스타일': [],\n};\n\nexport default sections;","import { gql } from \"apollo-boost\";\n\nconst GET_POSTS = gql`\n  query GetPosts(\n\t\t$tags: [String!]!\n\t\t$limit: Int\n\t\t$skip: Int\n\t\t$startDate: Float\n\t\t$endDate: Float\n\t\t$order: Order\n\t) {\n\t\tgetPosts(\n\t\t\ttags: $tags\n\t\t\tlimit: $limit\n\t\t\tskip: $skip\n\t\t\torder: $order\n\t\t\tstartDate: $startDate\n\t\t\tendDate: $endDate\n\t\t) {\n      post_id\n\t\t\tauthor\n\t\t\tpermlink\n\t\t\ttitle\n\t\t\tauthor_reputation\n\t\t\tsummary\n\t\t\ttags\n\t\t\timage\n\t\t\tcreated\n\t\t\ttotal_payout_value\n\t\t\tcurator_payout_value\n\t\t\tpending_payout_value\n\t\t\tvote_count\n\t\t\tcomment_count\n\t\t\t# category\n\t\t}\n}`;\n\nexport default GET_POSTS;","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { getReputation, transferTime } from '../Util/SteemUtil';\nimport { withRouter } from 'react-router-dom';\n\nconst PostWrapper = styled.li`\n  min-height: 180px;\n  padding: 30px 20px;\n  border-bottom: 1px solid #eee;\n  position: relative;\n  background-color: #fff;\n  box-sizing: border-box;\n  font-family: 'Noto Serif KR', 'Noto Sans Light', 'Malgun Gothic', sans-serif,\n    serif;\n`;\n\nconst PostLink = styled.a`\n  display: block;\n  clear: both;\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst PostContent = styled.div`\n  float: left;\n  width: 100%;\n  &.has_image {\n    width: 520px;\n  }\n`;\n\nconst PostTitle = styled.strong`\n  font-weight: 400;\n  font-size: 20px;\n  letter-spacing: -1px;\n  white-space: nowrap;\n  line-height: 28px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst PostSummery = styled.div`\n  display: -webkit-box;\n  max-height: 46px;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-box-orient: vertical;\n  padding-top: 6px;\n  color: #666;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nconst PostThumb = styled.div`\n  overflow: hidden;\n  position: absolute;\n  top: 30px;\n  right: 20px;\n  width: 120px;\n  float: right;\n}\n`;\n\nconst PostImg = styled.img`\n  object-fit: cover;\n  width: 120px;\n  height: 120px;\n  object-position: center;\n  image-rendering: auto;\n`;\n\nconst PostAppendWrapper = styled.div`\n  display: block;\n  overflow: hidden;\n  padding-top: 20px;\n  font-size: 12px;\n  color: #959595;\n`;\n\nconst Dot = styled.span`\n  float: left;\n  display: inline-block;\n  width: 2px;\n  height: 2px;\n  margin: 4.5px 6px 0;\n  background-color: #aaa;\n  vertical-align: top;\n`;\n\nconst PostAppend = styled.span`\n  float: left;\n  user-select: text !important;\n  font-size: 12px;\n  color: #959595;\n`;\n\nconst By = styled.span`\n  float: left;\n  width: 15px;\n  height: 15px;\n  margin-right: 4px;\n  font-size: 12px;\n  font-family: Georgia;\n  font-style: italic;\n  color: #bfbfbf;\n  }\n`;\n\nconst PostListItem = ({ data, history, match, disabled }) => {\n  // console.log(data)\n  const payout =\n    data.curator_payout_value +\n    data.pending_payout_value +\n    data.total_payout_value;\n  const hasImage = Boolean(data.image);\n\n  return (\n    <PostWrapper\n    // onClick={() => history.push(`/${data.category}/@${data.author}/${data.permlink}`)}\n    >\n      <PostLink\n        onClick={() => history.push(`/@${data.author}/${data.permlink}`)}\n      >\n        <PostContent className={hasImage && 'has_image'}>\n          <PostTitle>{data.title}</PostTitle>\n          <PostSummery>{data.summary}</PostSummery>\n          <PostAppendWrapper>\n            <PostAppend>좋아요{data.vote_count}</PostAppend>\n            <Dot />\n            <PostAppend>댓글{data.comment_count}</PostAppend>\n            <Dot />\n            <PostAppend>보상${payout}</PostAppend>\n            <Dot />\n            <PostAppend>{transferTime(data.created)}</PostAppend>\n            <Dot />\n            <By>by</By>\n            <PostAppend>\n              {data.author}({getReputation(data.author_reputation, 0)})\n            </PostAppend>\n          </PostAppendWrapper>\n        </PostContent>\n        {hasImage && (\n          <PostThumb>\n            <PostImg\n              src={`https://cdn.steemitimages.com/640x0/${data.image}`}\n            />\n          </PostThumb>\n        )}\n      </PostLink>\n    </PostWrapper>\n  );\n};\n\nPostListItem.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string,\n    summary: PropTypes.string,\n    created: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  }).isRequired,\n};\n\nexport default withRouter(PostListItem);\n","export const getReputation = (reputation, toFixed) => {\n  let result =\n    Math.max(Math.log10(Math.abs(reputation)) - 9, 0) *\n      (reputation >= 0 ? 1 : -1) *\n      9 +\n    25;\n  if (typeof toFixed === 'number') {\n    result = result.toFixed(toFixed);\n  }\n  return result;\n};\n\nexport const transferTime = timestamp => {\n  if (typeof timestamp !== 'string') timestamp = String(timestamp);\n  if (timestamp.length < 14) return timestamp;\n  const date = new Date(`${timestamp}Z`);\n\n  const now = new Date();\n  const sYear = date.getFullYear();\n  const sMonth = date.getMonth();\n  const sDate = date.getDate();\n  const sHour = date.getHours();\n  const sMin = date.getMinutes();\n  const sSecond = date.getSeconds();\n  const sc = 1000;\n\n  const today = new Date(sYear, sMonth, sDate, sHour, sMin, sSecond);\n  // 지나간 초\n  const pastSecond = parseInt((now - today) / sc, 10);\n\n  let day;\n  let hour;\n  let min;\n  let str = '';\n\n  if (pastSecond > 86400) {\n    day = parseInt(pastSecond / 86400, 10);\n    str = `${day}일 전`;\n  } else if (pastSecond > 3600) {\n    hour = parseInt(pastSecond / 3600, 10);\n    str = `${str + hour}시간 전`;\n  } else if (pastSecond > 60) {\n    min = parseInt(pastSecond / 60, 10);\n    str = `${str + min}분 전`;\n  } else {\n    str = `${pastSecond}초 전`;\n  }\n\n  return str;\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n\n  .lds-facebook {\n    display: inline-block;\n    position: relative;\n    width: 64px;\n    height: 64px;\n  }\n  .lds-facebook div {\n    display: inline-block;\n    position: absolute;\n    left: 6px;\n    width: 13px;\n    background: rgba(200, 200, 200, 0.7);\n    animation: lds-facebook 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\n  }\n  .lds-facebook div:nth-child(1) {\n    left: 6px;\n    animation-delay: -0.24s;\n  }\n  .lds-facebook div:nth-child(2) {\n    left: 26px;\n    animation-delay: -0.12s;\n  }\n  .lds-facebook div:nth-child(3) {\n    left: 45px;\n    animation-delay: 0;\n  }\n  @keyframes lds-facebook {\n    0% {\n      top: 6px;\n      height: 51px;\n    }\n    50%,\n    100% {\n      top: 19px;\n      height: 26px;\n    }\n  }\n`;\n\nexport default () => (\n  <Loader>\n    <div className=\"lds-facebook\">\n      <div />\n      <div />\n      <div />\n    </div>\n  </Loader>\n);\n","// ref: https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/page-layout-examples/blog\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\n\nimport { useApolloClient, useQuery } from 'react-apollo-hooks';\n\nimport { unstable_useMediaQuery as useMediaQuery } from '@material-ui/core/useMediaQuery';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport styles from '../Styles/DefaultStyles';\n\nimport sections from '../Constants/Sections';\nimport GET_POSTS from '../GraphQL/GetPosts';\nimport PostListItem from '../Components/PostListItem';\n\nimport Loader from '../Components/Loader';\n\nconst WrapWriterList = styled.div`\n  float: right;\n  width: 220px;\n  padding: 20px 20px 24px;\n  background-color: #fff;\n  box-sizing: border-box;\n`;\n\nconst PostList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  backface-visibility: hidden;\n`;\n\nconst MainPage = props => {\n  const client = useApolloClient();\n\n  const mediaXSmatches = useMediaQuery('(min-width:960px)');\n\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n\n  // const { data } = useQuery(GET_POSTS, {\n  //   variables: {\n  //     tags: ['kr'],\n  //     limit: 10,\n  //     skip: 0,\n  //     order: 'CREATED',\n  //     startDate: 10190512235959,\n  //     endDate: 30190512235959,\n  //   },\n  // });\n  // console.log(data);\n  // setPosts(data.getPosts);\n\n  const getPosts = async ({ tags }) => {\n    await setLoading(true);\n    const { data } = await client.query({\n      query: GET_POSTS,\n      variables: {\n        tags,\n        limit: 20,\n        skip: 0,\n        order: 'CREATED',\n      },\n    });\n    console.log(data);\n    await setLoading(false);\n    await setPosts(data.getPosts);\n  };\n\n  // didMount\n  useEffect(() => {\n    getPosts({ tags: ['kr'] });\n  }, []);\n\n  const selectCategory = async tags => {\n    await setPosts([]);\n    await getPosts({ tags });\n  };\n\n  const { classes } = props;\n\n  return (\n    <>\n      <Helmet>\n        <title>Main | Whan Community</title>\n      </Helmet>\n      <CssBaseline />\n      <div className={classes.layout}>\n        <Toolbar className={classes.toolbarMain}>\n          <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            align=\"center\"\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            Whan Community\n          </Typography>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n        </Toolbar>\n        <Toolbar variant=\"dense\" className={classes.toolbarSecondary}>\n          {Object.entries(sections).map(([section, tags]) => (\n            <Typography color=\"inherit\" noWrap key={section}>\n              <Button size=\"small\" onClick={() => selectCategory(tags)}>\n                {section}\n              </Button>\n            </Typography>\n          ))}\n        </Toolbar>\n        <Divider />\n        <main>\n          <Grid container spacing={0} className={classes.mainGrid}>\n            {/* Main content */}\n            <Grid item xs={12} md={9}>\n              <PostList>\n                {posts.map(post => (\n                  <PostListItem\n                    key={post.post_id}\n                    data={post}\n                    onclick={() => {}}\n                  />\n                ))}\n                {/* <PostListItem data={\n{\"post_id\":74639213,\"author\":\"miri.choi\",\"permlink\":\"r1rpd\",\"title\":\"[커리지] 바쁜 운동인을 위한 단백질 간식 정기배송 스타트업\",\"author_reputation\":3639794194362,\"summary\":\"운동인의 월간 단백질 박스 🏋 📦 바쁜 일상, 시간 쪼개어 운동하는 당신에게 매월 엄선된 다양한 단백질 간식을 배송합니다 🚛 치솟는 고깃값, 비싼 프로틴바 허나 부족한 단백질 섭\",\"tags\":[\"kr\",\"kr-life\",\"kr-event\",\"kr-market\",\"jjangjjangman\"],\"image\":\"https://cdn.steemitimages.com/DQmXbeGDKZvi1PCKhJqWyUbCrynGZTuC9NqjXdKdCZroJcU/IMG_5470.JPG\",\"created\":20190512142030,\"total_payout_value\":0,\"curator_payout_value\":0,\"pending_payout_value\":0.217,\"vote_count\":14,\"comment_count\":1,\"__typename\":\"Post\"}\n} /> */}\n              </PostList>\n              {loading && <Loader />}\n            </Grid>\n            {/* End main content */}\n            {mediaXSmatches && (\n              <Grid item md={3}>\n                <WrapWriterList>\n                  <strong>추천작가</strong>\n                </WrapWriterList>\n              </Grid>\n            )}\n          </Grid>\n        </main>\n      </div>\n    </>\n  );\n};\n\nexport default withStyles(styles)(MainPage);\n","import { Client } from 'dsteem';\n\nconst client = new Client('https://api.steemit.com');\n\nexport default client;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Helmet } from 'react-helmet';\nimport Remarkable from 'remarkable';\nimport steemit from '../Helpers/Steemit';\n\nconst mobildWidthStyles = `\n  @media only screen and (max-width: 1024px) {\n    min-width: 620px;\n    width: unset;\n    margin-right: 40px;\n    margin-left: 40px;\n  }\n`;\n\nconst Container = styled.div`\n  padding-top: 50px;\n`;\n\nconst ArticleWrap = styled.div`\n  min-width: 1020px;\n  word-break: break-word;\n  word-wrap: break-word;\n  font-family: 'Noto Sans Light', 'Nanum Myeongjo', 'Malgun Gothic', sans-serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media only screen and (max-width: 1024px) {\n    min-width: 620px;\n  }\n`;\n\nconst ArticleCover = styled.div``;\n\nconst ArticleTitle = styled.h1`\n  letter-spacing: -0.01em;\n  color: #333;\n  font-size: 34pt;\n  font-size: 34pt;\n  line-height: 40pt;\n  word-wrap: break-word;\n  width: 700px;\n\n  ${mobildWidthStyles}\n`;\n\nconst ArticleInfo = styled.div`\n  margin-bottom: 27px;\n  margin-top: 50px;\n  width: 700px;\n  font-size: 12px;\n\n  ${mobildWidthStyles}\n\n  & .by {\n    color: #bbb;\n    opacity: 0.8;\n    margin-right: 2px;\n    display: inline-block;\n    width: 15px;\n    height: 14px;\n    margin: 0 4px 0 0;\n    font-family: Georgia, sans-serif;\n    font-style: italic;\n    font-size: 12px;\n  }\n  & .author {\n    color: #666;\n  }\n  & .dot {\n    display: inline-block;\n    width: 2px;\n    height: 2px;\n    margin: 4.5px 7px 0;\n    background-color: #aaa;\n    vertical-align: top;\n  }\n  & .date {\n    letter-spacing: -0.05em;\n    color: #bbb;\n    opacity: 1;\n  }\n`;\n\nconst ArticleBody = styled.div`\n  padding-bottom: 54px;\n  position: relative;\n  background-color: #fff;\n  margin: 0 auto;\n  font-smoothing: antialiased;\n  backface-visibility: hidden;\n  text-rendering: auto;\n  text-rendering: optimizeSpeed;\n  text-rendering: optimizeLegibility;\n  text-rendering: geometricPrecision;\n  text-rendering: inherit;\n  width: 700px;\n\n  ${mobildWidthStyles}\n\n  & p {\n    margin: 0 0 1.5rem 0;\n    text-align: left;\n    font-size: 11pt;\n    line-height: 22pt;\n    letter-spacing: 0.8px;\n  }\n\n  & img {\n    max-width: 100%;\n  }\n`;\n\nconst md = new Remarkable({\n  html: true, // Enable HTML tags in source\n  xhtmlOut: false, // Use '/' to close single tags (<br />)\n  breaks: true, // Convert '\\n' in paragraphs into <br>\n  langPrefix: 'language-', // CSS language prefix for fenced blocks\n  linkify: true, // Autoconvert URL-like text to links\n\n  // Enable some language-neutral replacement + quotes beautification\n  typographer: false,\n\n  // Double + single quotes replacement pairs, when typographer enabled,\n  // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n  quotes: '“”‘’',\n\n  // Highlighter function. Should return escaped HTML,\n  // or '' if the source string is not changed\n  highlight: function(/*str, lang*/) {\n    return '';\n  },\n});\n\nconst DetailPage = props => {\n  console.log(props);\n  const { history, location, match } = props;\n  const { isExact, params, path, url } = match;\n  const { author, permlink } = params;\n\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    steemit.database\n      .getDiscussions('created', {\n        tag: '',\n        limit: 1,\n        start_author: author,\n        start_permlink: permlink,\n      })\n      .then(([data]) => setData(data));\n    // .then(({ title, body, author }) => {});\n    // dsteem.database.call()\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Main | Whan Community</title>\n      </Helmet>\n      {data ? (\n        <Container>\n          <ArticleWrap>\n            <ArticleCover>\n              <ArticleTitle>{data.title}</ArticleTitle>\n              <ArticleInfo>\n                <span class=\"by\">by</span>\n                <span class=\"author\">{data.author}</span>\n                <span class=\"dot\" />\n                <span class=\"date\">\n                  {new Date(data.created + 'Z').toDateString()}\n                </span>\n              </ArticleInfo>\n            </ArticleCover>\n            <ArticleBody\n              dangerouslySetInnerHTML={{ __html: md.render(data.body) }}\n            />\n          </ArticleWrap>\n        </Container>\n      ) : null}\n    </>\n  );\n};\n\nexport default DetailPage;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport MainPage from './Pages/MainPage';\nimport DetailPage from './Pages/DetailPage';\n\nconst AppRouter = () => (\n  <Route>\n    <Route exact path=\"/\" component={MainPage} />\n    <Route exact path=\"/:category/@:author/:permlink\" component={DetailPage} />\n    <Route exact path=\"/@:author/:permlink\" component={DetailPage} />\n  </Route>\n);\n\nexport default AppRouter;\n","import React from 'react';\nimport GlobalStyles from './Styles/GlobalStyles';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from 'styled-components';\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { ApolloProvider as ApolloHooksProvider } from 'react-apollo-hooks';\nimport client from './Apollo/Client';\nimport Theme from './Styles/Theme';\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <ApolloProvider client={ client }>\n      {/* <ThemeProvider theme={ Theme }>\n        <>*/}\n          <GlobalStyles/> \n          <Router>\n            <Routes />\n          </Router>\n        {/* </>\n      </ThemeProvider> */}\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/first */\n// require('dotenv').config();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}