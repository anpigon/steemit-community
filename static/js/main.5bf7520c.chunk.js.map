{"version":3,"sources":["Styles/GlobalStyles.js","Apollo/Client.js","Styles/DefaultStyles.js","Constants/Sections.js","GraphQL/GetPosts.js","Components/PostListItem.js","Util/SteemUtil.js","Components/Loader.js","Pages/MainPage.js","Routes.js","App.js","index.js"],"names":["createGlobalStyle","_templateObject","reset","apolloClient","ApolloClient","uri","process","styles","theme","layout","Object","defineProperty","width","marginLeft","spacing","unit","marginRight","breakpoints","up","toolbarMain","borderBottom","concat","palette","grey","toolbarTitle","flex","toolbarSecondary","justifyContent","mainFeaturedPost","backgroundColor","color","common","white","marginBottom","mainFeaturedPostContent","padding","paddingRight","mainGrid","marginTop","card","display","cardDetails","cardMedia","markdown","sidebarAboutBox","sidebarSection","footer","background","paper","sections","전체","일상","도서","글쓰기","운동","이벤트","게임","맛집/음식","여행","코딩/개발","예술/디자인","사진","가즈아","GET_POSTS","gql","GetPosts_templateObject","PostWrapper","styled","li","PostListItem_templateObject","PostLink","a","_templateObject2","PostContent","div","_templateObject3","PostTitle","strong","_templateObject4","PostSummery","_templateObject5","PostThumb","_templateObject6","PostImg","img","_templateObject7","PostAppendWrapper","_templateObject8","Dot","span","_templateObject9","PostAppend","_templateObject10","By","_templateObject11","PostListItem","_ref","data","payout","curator_payout_value","pending_payout_value","total_payout_value","hasImage","Boolean","image","react_default","createElement","className","title","summary","vote_count","comment_count","time","String","length","now","Date","sYear","substring","sMonth","sDate","sHour","sMin","sSecond","today","pastSecond","parseInt","str","transferTime","created","author","reputation","toFixed","result","Math","max","log10","abs","getReputation","author_reputation","src","Loader","Loader_templateObject","Components_Loader","WrapWriterList","MainPage_templateObject","PostList","ul","MainPage_templateObject2","withStyles","props","client","useApolloClient","mediaXSmatches","useMediaQuery","_useState","useState","_useState2","slicedToArray","loading","setLoading","_useState3","_useState4","posts","setPosts","getPosts","_ref2","asyncToGenerator","regenerator_default","mark","_callee","tags","_ref3","wrap","_context","prev","next","query","variables","limit","skip","order","sent","console","log","stop","_x","apply","this","arguments","useEffect","classes","Fragment","Helmet","CssBaseline_default","Toolbar_default","Typography_default","component","variant","align","noWrap","IconButton_default","Search_default","entries","map","_ref4","_ref5","section","key","Button_default","size","onClick","Divider_default","Grid_default","container","item","xs","md","post","Components_PostListItem","post_id","AppRouter","react_router","exact","path","MainPage","App","ApolloContext","GlobalStyles","react_router_dom","Routes","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5bf7520c.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n// import 'typeface-noto-serif';\n\nexport default createGlobalStyle`\n\t@import url('https://fonts.googleapis.com/css?family=Noto+Serif+KR:400,700');\n\t\n\t${reset}\n\n\t// dl, ul, ol, menu, li {\n  //   \tlist-style: none;\n\t// }\n`;","import ApolloClient from 'apollo-boost';\n\nconst apolloClient = new ApolloClient({\n\turi: process.env.REACT_APP_GRAPHQL_URL,\n});\n\nexport default apolloClient;","const styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  toolbarMain: {\n    borderBottom: `1px solid ${theme.palette.grey[300]}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n  },\n  mainFeaturedPost: {\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing.unit * 4,\n  },\n  mainFeaturedPostContent: {\n    padding: `${theme.spacing.unit * 6}px`,\n    [theme.breakpoints.up('md')]: {\n      paddingRight: 0,\n    },\n  },\n  mainGrid: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  card: {\n    display: 'flex',\n  },\n  cardDetails: {\n    flex: 1,\n  },\n  cardMedia: {\n    width: 160,\n  },\n  markdown: {\n    padding: `${theme.spacing.unit * 3}px 0`,\n  },\n  sidebarAboutBox: {\n    padding: theme.spacing.unit * 2,\n    backgroundColor: theme.palette.grey[200],\n  },\n  sidebarSection: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    marginTop: theme.spacing.unit * 8,\n    padding: `${theme.spacing.unit * 6}px 0`,\n  },\n});\n\nexport default styles;","const sections = {\n  '전체': ['kr'],\n  // '신입': ['kr-newbie', 'kr-join'],\n  '일상':['life', 'kr-life', 'kr-daily'],\n  '도서':['book', 'kr-book', 'booksteem'],\n  '글쓰기': ['kr-pen', 'kr-writing', 'pen', 'writing'],\n  '운동': ['actifit'],\n  '이벤트': ['event', 'kr-event'],\n  '게임':['game', 'kr-game', 'steemmonsters', 'nextcolony'],\n  '맛집/음식':['tasteem', 'tasteem-kr', 'muksteem', 'food', 'kr-food'],\n  // '연재': ['kr-series'],\n  '여행': ['tripsteem', 'travel', 'kr-travel'],\n  // '해외': ['kr-overseas'],\n\t'코딩/개발': ['kr-dev', 'dev'],\n  '예술/디자인': ['art', 'kr-art', 'ntopaz'],\n  '사진': ['photo', 'kr-photo'],\n  // '블록체인': ['coinkorea'],\n  // '투자': ['tooza'],\n  '가즈아': ['kr-gazua']\n  // '기술': [],\n  // '문화': [],\n  // '사업': [],\n  // '정치': [],\n  // '과학': [],\n  // '건강': [],\n  // '스타일': [],\n};\n\nexport default sections;","import { gql } from \"apollo-boost\";\n\nconst GET_POSTS = gql`\n  query GetPosts(\n\t\t$tags: [String!]!\n\t\t$limit: Int\n\t\t$skip: Int\n\t\t$startDate: Float\n\t\t$endDate: Float\n\t\t$order: Order\n\t) {\n\t\tgetPosts(\n\t\t\ttags: $tags\n\t\t\tlimit: $limit\n\t\t\tskip: $skip\n\t\t\torder: $order\n\t\t\tstartDate: $startDate\n\t\t\tendDate: $endDate\n\t\t) {\n      post_id\n\t\t\tauthor\n\t\t\tpermlink\n\t\t\ttitle\n\t\t\tauthor_reputation\n\t\t\tsummary\n\t\t\ttags\n\t\t\timage\n\t\t\tcreated\n\t\t\ttotal_payout_value\n\t\t\tcurator_payout_value\n\t\t\tpending_payout_value\n\t\t\tvote_count\n\t\t\tcomment_count\n\t\t}\n}`;\n\nexport default GET_POSTS;","import React from 'react';\nimport styled from 'styled-components';\nimport { getReputation, transferTime } from '../Util/SteemUtil'\n\nconst PostWrapper = styled.li`\n  min-height: 180px;\n  padding: 30px 20px;\n  border-bottom: 1px solid #eee;\n  position: relative;\n  background-color: #fff;\n  box-sizing: border-box;\n  font-family: 'Noto Serif KR', \"Noto Sans Light\", \"Malgun Gothic\", sans-serif, serif;\n`\n\nconst PostLink = styled.a`\n  display: block;\n  clear: both;\n  overflow: hidden;\n`;\n\nconst PostContent = styled.div`\n  float: left;\n  width: 100%;\n  &.has_image {\n    width: 520px;\n  }\n`;\n\nconst PostTitle = styled.strong`\n  font-weight: 400;\n  font-size: 20px;\n  letter-spacing: -1px;\n  white-space: nowrap;\n  line-height: 28px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst PostSummery = styled.div`\n  display: -webkit-box;\n  max-height: 46px;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  -webkit-box-orient: vertical;\n  padding-top: 6px;\n  color: #666;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nconst PostThumb = styled.div`\n  overflow: hidden;\n  position: absolute;\n  top: 30px;\n  right: 20px;\n  width: 120px;\n  float: right;\n}\n`;\n\nconst PostImg = styled.img`\n  object-fit: cover;\n  width: 120px;\n  height: 120px;\n  object-position: center;\n  image-rendering: auto;\n`;\n\nconst PostAppendWrapper = styled.div`\n  display: block;\n  overflow: hidden;\n  padding-top: 20px;\n  font-size: 12px;\n  color: #959595;\n`;\n\nconst Dot = styled.span`\n  float: left;\n  display: inline-block;\n  width: 2px;\n  height: 2px;\n  margin: 4.5px 6px 0;\n  background-color: #aaa;\n  vertical-align: top;\n`;\n\nconst PostAppend = styled.span`\n  float: left;\n  user-select: text !important;\n  font-size: 12px;\n  color: #959595;\n`;\n\nconst By = styled.span`\n  float: left;\n  width: 15px;\n  height: 15px;\n  margin-right: 4px;\n  font-size: 12px;\n  font-family: Georgia;\n  font-style: italic;\n  color: #bfbfbf;\n  }\n`;\n\nconst PostListItem = ({ data }) => {\n  // console.log(data)\n  const payout = data.curator_payout_value + data.pending_payout_value + data.total_payout_value;\n  const hasImage = Boolean(data.image);\n  return (\n    <PostWrapper>\n      <PostLink>\n        <PostContent className={hasImage && 'has_image'}>\n          <PostTitle>{data.title}</PostTitle>\n          <PostSummery>{data.summary}</PostSummery>\n          <PostAppendWrapper>\n            <PostAppend>좋아요{data.vote_count}</PostAppend>\n            <Dot />\n            <PostAppend>댓글{data.comment_count}</PostAppend>\n            <Dot />\n            <PostAppend>보상${payout}</PostAppend>\n            <Dot />\n            <PostAppend>{transferTime(data.created)}</PostAppend>\n            <Dot />\n            <By>by</By>\n            <PostAppend>{data.author}({getReputation(data.author_reputation, 0)})</PostAppend>\n          </PostAppendWrapper>\n        </PostContent>\n        {\n          hasImage && (\n            <PostThumb>\n              <PostImg src={`https://cdn.steemitimages.com/640x0/${data.image}`} />\n            </PostThumb>\n          )\n        }\n        \n      </PostLink>\n    </PostWrapper>\n  )\n}\n\nexport default PostListItem;","export const getReputation = (reputation, toFixed) => {\n  let result = (Math.max(Math.log10(Math.abs(reputation)) - 9, 0) * ((reputation >= 0) ? 1 : -1) * 9 + 25);\n  if (typeof (toFixed) === 'number') {\n    result = result.toFixed(toFixed);\n  }\n  return result;\n}\n\nexport const transferTime = (time) => {\n  if(typeof time !== 'string') time = String(time);\n  if(time.length < 14) return time;\n\n  var now = new Date();\n  var sYear = time.substring(0, 4);\n  var sMonth = time.substring(4, 6) - 1;\n  var sDate = time.substring(6, 8);\n  var sHour = time.substring(8, 10);\n  var sMin = time.substring(10, 12);\n  var sSecond = time.substring(12, 14);\n  var sc = 1000;\n\n  var today = new Date(sYear, sMonth, sDate, sHour, sMin, sSecond);\n  //지나간 초\n  var pastSecond = parseInt((now - today) / sc, 10);\n\n  var date;\n  var hour;\n  var min;\n  var str = \"\";\n\n  if (pastSecond > 86400) {\n    date = parseInt(pastSecond / 86400, 10);\n    str = date + \"일 전\";\n  } else if (pastSecond > 3600) {\n    hour = parseInt(pastSecond / 3600, 10);\n    str = str + hour + \"시간 전\";\n  } else if (pastSecond > 60) {\n    min = parseInt(pastSecond / 60, 10);\n    str = str + min + \"분 전\";\n  } else {\n    str = pastSecond + \"초 전\";\n  }\n\n  return str;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Loader = styled.div`\n  display: flex;\n  justify-content: center;\n\n  .lds-facebook {\n    display: inline-block;\n    position: relative;\n    width: 64px;\n    height: 64px;\n  }\n  .lds-facebook div {\n    display: inline-block;\n    position: absolute;\n    left: 6px;\n    width: 13px;\n    background: rgba(200, 200, 200, 0.7);\n    animation: lds-facebook 1.2s cubic-bezier(0, 0.5, 0.5, 1) infinite;\n  }\n  .lds-facebook div:nth-child(1) {\n    left: 6px;\n    animation-delay: -0.24s;\n  }\n  .lds-facebook div:nth-child(2) {\n    left: 26px;\n    animation-delay: -0.12s;\n  }\n  .lds-facebook div:nth-child(3) {\n    left: 45px;\n    animation-delay: 0;\n  }\n  @keyframes lds-facebook {\n    0% {\n      top: 6px;\n      height: 51px;\n    }\n    50%,\n    100% {\n      top: 19px;\n      height: 26px;\n    }\n  }\n`;\n\nexport default () => (\n  <Loader>\n    <div className=\"lds-facebook\">\n      <div />\n      <div />\n      <div />\n    </div>\n  </Loader>\n);\n","// ref: https://github.com/mui-org/material-ui/tree/master/docs/src/pages/getting-started/page-layout-examples/blog\nimport React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\n\nimport { useApolloClient, useQuery } from 'react-apollo-hooks';\n\nimport { unstable_useMediaQuery as useMediaQuery } from '@material-ui/core/useMediaQuery';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport styles from '../Styles/DefaultStyles';\n\nimport sections from '../Constants/Sections';\nimport GET_POSTS from '../GraphQL/GetPosts';\nimport PostListItem from '../Components/PostListItem';\n\nimport Loader from '../Components/Loader';\n\nconst WrapWriterList = styled.div`\n  float: right;\n  width: 220px;\n  padding: 20px 20px 24px;\n  background-color: #fff;\n  box-sizing: border-box;\n`;\n\nconst PostList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  backface-visibility: hidden;\n`;\n\nconst MainPage = props => {\n  const client = useApolloClient();\n\n  const mediaXSmatches = useMediaQuery('(min-width:960px)');\n\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n\n  // const { data } = useQuery(GET_POSTS, {\n  //   variables: {\n  //     tags: ['kr'],\n  //     limit: 10,\n  //     skip: 0,\n  //     order: 'CREATED',\n  //     startDate: 10190512235959,\n  //     endDate: 30190512235959,\n  //   },\n  // });\n  // console.log(data);\n  // setPosts(data.getPosts);\n\n  const getPosts = async ({ tags }) => {\n    await setLoading(true);\n    const { data } = await client.query({\n      query: GET_POSTS,\n      variables: {\n        tags,\n        limit: 20,\n        skip: 0,\n        order: 'CREATED',\n      },\n    });\n    console.log(data);\n    setLoading(false);\n    setPosts(data.getPosts);\n  };\n\n  useEffect(() => {\n    getPosts({ tags: ['kr'] });\n  }, []);\n\n  const { classes } = props;\n\n  return (\n    <>\n      <Helmet>\n        <title>Main | Whan Community</title>\n      </Helmet>\n      <CssBaseline />\n      <div className={classes.layout}>\n        <Toolbar className={classes.toolbarMain}>\n          <Typography\n            component=\"h2\"\n            variant=\"h5\"\n            color=\"inherit\"\n            align=\"center\"\n            noWrap\n            className={classes.toolbarTitle}\n          >\n            Whan Community\n          </Typography>\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n        </Toolbar>\n        <Toolbar variant=\"dense\" className={classes.toolbarSecondary}>\n          {Object.entries(sections).map(([section, tags]) => (\n            <Typography color=\"inherit\" noWrap key={section}>\n              <Button size=\"small\" onClick={() => getPosts({ tags })}>\n                {section}\n              </Button>\n            </Typography>\n          ))}\n        </Toolbar>\n        <Divider />\n        <main>\n          <Grid container spacing={0} className={classes.mainGrid}>\n            {/* Main content */}\n            <Grid item xs={12} md={8}>\n              <PostList>\n                {posts.map(post => (\n                  <PostListItem key={post.post_id} data={post} />\n                ))}\n                {/* <PostListItem data={\n{\"post_id\":74639213,\"author\":\"miri.choi\",\"permlink\":\"r1rpd\",\"title\":\"[커리지] 바쁜 운동인을 위한 단백질 간식 정기배송 스타트업\",\"author_reputation\":3639794194362,\"summary\":\"운동인의 월간 단백질 박스 🏋 📦 바쁜 일상, 시간 쪼개어 운동하는 당신에게 매월 엄선된 다양한 단백질 간식을 배송합니다 🚛 치솟는 고깃값, 비싼 프로틴바 허나 부족한 단백질 섭\",\"tags\":[\"kr\",\"kr-life\",\"kr-event\",\"kr-market\",\"jjangjjangman\"],\"image\":\"https://cdn.steemitimages.com/DQmXbeGDKZvi1PCKhJqWyUbCrynGZTuC9NqjXdKdCZroJcU/IMG_5470.JPG\",\"created\":20190512142030,\"total_payout_value\":0,\"curator_payout_value\":0,\"pending_payout_value\":0.217,\"vote_count\":14,\"comment_count\":1,\"__typename\":\"Post\"}\n} /> */}\n              </PostList>\n              {loading && <Loader />}\n            </Grid>\n            {/* End main content */}\n            {mediaXSmatches && (\n              <Grid item md={4}>\n                <WrapWriterList>\n                  <strong>추천작가</strong>\n                </WrapWriterList>\n              </Grid>\n            )}\n          </Grid>\n        </main>\n      </div>\n    </>\n  );\n};\n\nexport default withStyles(styles)(MainPage);\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport MainPage from \"./Pages/MainPage\";\n\nconst AppRouter = () => (\n\t<Route>\n\t\t<Route exact path=\"/\" component={MainPage} />\n\t</Route>\n);\n  \nexport default AppRouter;","import React from 'react';\nimport GlobalStyles from './Styles/GlobalStyles';\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from 'styled-components';\nimport { ApolloProvider } from \"react-apollo-hooks\";\nimport { ApolloProvider as ApolloHooksProvider } from 'react-apollo-hooks';\nimport client from './Apollo/Client';\nimport Theme from './Styles/Theme';\nimport Routes from \"./Routes\";\n\nfunction App() {\n  return (\n    <ApolloProvider client={ client }>\n      {/* <ThemeProvider theme={ Theme }>\n        <>*/}\n          <GlobalStyles/> \n          <Router>\n            <Routes />\n          </Router>\n        {/* </>\n      </ThemeProvider> */}\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/first */\n// require('dotenv').config();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}